{"ast":null,"code":"import _toConsumableArray from \"D:/React_Projects/Tigar_Survey/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/React_Projects/Tigar_Survey/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\React_Projects\\\\Tigar_Survey\\\\src\\\\components\\\\CreateSurvey.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Options } from \"./Options\";\nimport { Question } from \"./Question\";\nimport { TypeSelector } from \"./TypeSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CreateSurvey = function CreateSurvey(props) {\n  _s();\n\n  var _useState = useState([{\n    value: \"\",\n    id: \"1\"\n  }, {\n    value: \"\",\n    id: \"2\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      optionsArray = _useState2[0],\n      setOptionsArray = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      question = _useState4[0],\n      setQuestion = _useState4[1];\n\n  var addQuestion = function addQuestion() {\n    props.addQuestion(question, optionsArray);\n    setQuestion(\"\");\n    setOptionsArray([{\n      value: \"\",\n      id: \"1\"\n    }, {\n      value: \"\",\n      id: \"2\"\n    }]);\n  };\n\n  var handleQuestion = function handleQuestion(input) {\n    setQuestion(input);\n    console.log(question);\n  };\n\n  var handleOptionInput = function handleOptionInput(event) {\n    var temp = optionsArray;\n    temp.find(function (ele) {\n      return ele.id === event.target.id;\n    }).value = event.target.value; //console.log(temp);\n  };\n\n  var generateId = function generateId() {\n    var number = Math.floor(Math.random() * 1000);\n    return number;\n  };\n\n  var delOption = function delOption(id) {\n    if (optionsArray.length > 2) {\n      //console.log(optionsArray);\n      var temp = optionsArray.filter(function (ele) {\n        return ele.id !== id;\n      });\n      setOptionsArray(temp);\n    }\n  };\n\n  var addOption = function addOption() {\n    var obj = {\n      value: \"\",\n      id: \"\" + generateId()\n    };\n    var temp = [].concat(_toConsumableArray(optionsArray), [obj]);\n    setOptionsArray(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TypeSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Question, {\n      handleQuestion: handleQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this), optionsArray.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Options, {\n        id: item.id,\n        handleOptionInput: handleOptionInput,\n        addOption: addOption,\n        delOption: delOption\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CreateSurvey, \"iGUfTcqtmUKHcHChO0XESjDLbwQ=\");\n\n_c = CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"sources":["D:/React_Projects/Tigar_Survey/src/components/CreateSurvey.js"],"names":["React","useState","Options","Question","TypeSelector","CreateSurvey","props","value","id","optionsArray","setOptionsArray","question","setQuestion","addQuestion","handleQuestion","input","console","log","handleOptionInput","event","temp","find","ele","target","generateId","number","Math","floor","random","delOption","length","filter","addOption","obj","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Options } from \"./Options\";\r\nimport {Question} from \"./Question\";\r\nimport {TypeSelector} from \"./TypeSelector\";\r\n\r\nexport const CreateSurvey=(props)=>{\r\n  const [optionsArray, setOptionsArray]=useState([{value:\"\", id:\"1\"}, {value:\"\", id:\"2\"}]);\r\n  const [question, setQuestion]=useState(\"\");\r\n\r\n  const addQuestion=()=>{\r\n    props.addQuestion(question, optionsArray);\r\n    setQuestion(\"\");\r\n    setOptionsArray([{value:\"\", id:\"1\"}, {value:\"\", id:\"2\"}])\r\n  }\r\n\r\n\r\n  const handleQuestion=(input)=>{\r\n    setQuestion(input);\r\n    console.log(question);\r\n  }\r\n\r\n  const handleOptionInput=(event)=>{\r\n    const temp=optionsArray;\r\n    temp.find((ele)=>ele.id===event.target.id).value=event.target.value\r\n    //console.log(temp);\r\n  \r\n  }\r\n  const generateId=()=>{\r\n      let number=Math.floor(Math.random()*1000);\r\n      return number;\r\n  }\r\n  const delOption=(id)=>{\r\n    if(optionsArray.length>2){\r\n      //console.log(optionsArray);\r\n      const temp=optionsArray.filter((ele)=>ele.id!==id);\r\n      setOptionsArray(temp);\r\n    }\r\n\r\n  }\r\n\r\n  const addOption=()=>{\r\n    const obj={\r\n      value:\"\",\r\n      id:\"\"+generateId()\r\n    }\r\n    let temp=[...optionsArray, obj];\r\n    setOptionsArray(temp);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <TypeSelector/>\r\n    <br/>\r\n    <Question handleQuestion={handleQuestion}/>\r\n    <br/>\r\n    {optionsArray.map((item)=>\r\n      <Options id={item.id} handleOptionInput={handleOptionInput} addOption={addOption} delOption={delOption} key={item.id}/>\r\n    )}\r\n    <button onClick={addQuestion}>Add Question</button>\r\n    <button>Publish</button>\r\n    \r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}